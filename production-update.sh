#!/bin/bash

# SUPERvote Production Update Script
# Met √† jour SUPERvote sur le serveur de production

set -e

# Configuration
PRODUCTION_SERVER="ubuntu@46.226.104.149"
DOMAIN="vote.super-csn.ca"
APP_DIR="/opt/supervote/SUPERvote"

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCC√àS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[ATTENTION]${NC} $1"; }
log_error() { echo -e "${RED}[ERREUR]${NC} $1"; }

# V√©rifier la connexion SSH
check_ssh_connection() {
    log_info "V√©rification de la connexion SSH..."
    if ! ssh -o ConnectTimeout=10 -o BatchMode=yes ${PRODUCTION_SERVER} exit 2>/dev/null; then
        log_error "Impossible de se connecter √† ${PRODUCTION_SERVER}"
        exit 1
    fi
    log_success "Connexion SSH √©tablie"
}

# Cr√©er le script de mise √† jour
create_update_script() {
    cat > remote-update.sh << 'UPDATE_SCRIPT'
#!/bin/bash

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCC√àS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[ATTENTION]${NC} $1"; }
log_error() { echo -e "${RED}[ERREUR]${NC} $1"; }

APP_DIR="/opt/supervote/SUPERvote"
DOMAIN="vote.super-csn.ca"

log_info "=== Mise √† jour SUPERvote ==="

# Aller dans le r√©pertoire de l'application
cd ${APP_DIR}

# Sauvegarde avant mise √† jour
log_info "Cr√©ation d'une sauvegarde..."
backup_dir="backup_$(date +%Y%m%d_%H%M%S)"
cp -r . ../${backup_dir}
log_success "Sauvegarde cr√©√©e dans ../${backup_dir}"

# V√©rifier le statut actuel
log_info "V√©rification du statut actuel..."
docker compose -f docker-compose.prod.yml ps

# Mettre √† jour le code
log_info "Mise √† jour du code depuis Git..."
git stash || true  # Sauvegarder les modifications locales s'il y en a
git pull origin main
log_success "Code mis √† jour"

# Rebuild et red√©marrer les conteneurs
log_info "Reconstruction et red√©marrage des conteneurs..."
docker compose -f docker-compose.prod.yml up -d --build

# Attendre que les services red√©marrent
log_info "Attente du red√©marrage des services..."
sleep 30

# V√©rifier que tout fonctionne
log_info "V√©rification du fonctionnement..."
if curl -I https://${DOMAIN} >/dev/null 2>&1; then
    log_success "‚úÖ Application accessible sur https://${DOMAIN}"
else
    log_error "‚ùå Application non accessible"
    log_warning "Tentative de restauration de la sauvegarde..."
    
    # Restaurer la sauvegarde
    cd ..
    rm -rf SUPERvote
    cp -r ${backup_dir} SUPERvote
    cd SUPERvote
    docker compose -f docker-compose.prod.yml up -d --build
    
    log_error "Sauvegarde restaur√©e. Veuillez v√©rifier les erreurs."
    exit 1
fi

# Nettoyer les anciennes images Docker
log_info "Nettoyage des anciennes images Docker..."
docker image prune -f || true

# Afficher le statut final
log_info "Statut final:"
docker compose -f docker-compose.prod.yml ps

log_success "=== Mise √† jour termin√©e avec succ√®s ==="
echo "üåê Application: https://${DOMAIN}"
echo "üìä Statut: ./manage.sh status"
echo "üìã Logs: ./manage.sh logs"
UPDATE_SCRIPT
}

# Fonction principale de mise √† jour
update_production() {
    log_info "=== MISE √Ä JOUR SUPERVOTE EN PRODUCTION ==="
    log_info "Serveur: ${PRODUCTION_SERVER}"
    log_info "Domaine: ${DOMAIN}"
    echo ""
    
    read -p "Voulez-vous continuer avec la mise √† jour? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "Mise √† jour annul√©e"
        exit 0
    fi
    
    log_info "Cr√©ation du script de mise √† jour..."
    create_update_script
    
    log_info "Copie du script sur le serveur..."
    scp remote-update.sh ${PRODUCTION_SERVER}:~/
    
    log_info "Ex√©cution de la mise √† jour..."
    ssh ${PRODUCTION_SERVER} "chmod +x remote-update.sh && ./remote-update.sh"
    
    log_info "Nettoyage..."
    rm -f remote-update.sh
    
    log_success "=== MISE √Ä JOUR TERMIN√âE ==="
    echo ""
    echo "üéâ SUPERvote a √©t√© mis √† jour avec succ√®s!"
    echo "üåê V√©rifiez votre application sur: https://${DOMAIN}"
}

# Fonction principale
main() {
    echo "=== Script de Mise √† Jour SUPERvote Production ==="
    echo "Met √† jour SUPERvote sur ${PRODUCTION_SERVER}"
    echo ""
    
    check_ssh_connection
    update_production
}

# Ex√©cution
main "$@"