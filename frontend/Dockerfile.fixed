# SUPERvote Frontend - Fixed Production Dockerfile

# Build stage
FROM node:20.19.4-alpine as builder

WORKDIR /app

# Update npm to latest version
RUN npm install -g npm@10.8.2

# Copy package files
COPY package.json ./

# Install all dependencies first (including dev dependencies for build)
RUN npm install

# Copy source code
COPY . .

# Build arguments
ARG REACT_APP_BACKEND_URL=https://vote.super-csn.ca
ARG REACT_APP_VERSION=2.0.0
ARG REACT_APP_ENVIRONMENT=production

# Set environment variables for build
ENV REACT_APP_BACKEND_URL=$REACT_APP_BACKEND_URL
ENV REACT_APP_VERSION=$REACT_APP_VERSION
ENV REACT_APP_ENVIRONMENT=$REACT_APP_ENVIRONMENT
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false

# Build the application
RUN npm run build

# Production stage
FROM nginx:1.26-alpine

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built application
COPY --from=builder /app/build /usr/share/nginx/html

# Ensure proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Create required directories
RUN mkdir -p /var/cache/nginx/client_temp && \
    chown -R nginx:nginx /var/cache/nginx

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]