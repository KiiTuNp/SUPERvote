# SUPERvote Nginx - Industry Leading Production Configuration
# High-performance, security-hardened reverse proxy

ARG NGINX_VERSION=1.26-alpine
ARG BUILD_DATE

FROM nginx:${NGINX_VERSION}

# Metadata
LABEL maintainer="SUPERvote Team" \
      version="2.0.0" \
      description="SUPERvote Nginx - Production Ready" \
      build-date="${BUILD_DATE}" \
      schema-version="1.0"

# Install security updates and required packages
RUN apk update && \
    apk upgrade && \
    apk add --no-cache \
        ca-certificates \
        curl \
        openssl \
        dumb-init \
        tzdata \
    && rm -rf /var/cache/apk/*

# Create nginx user if not exists and set up directories
RUN addgroup -g 101 -S nginx 2>/dev/null || true && \
    adduser -u 101 -S nginx -G nginx 2>/dev/null || true

# Create required directories with proper permissions
RUN mkdir -p /var/cache/nginx/client_temp \
             /var/cache/nginx/proxy_temp \
             /var/cache/nginx/fastcgi_temp \
             /var/log/nginx \
             /etc/nginx/ssl \
             /var/run \
    && chown -R nginx:nginx /var/cache/nginx \
                            /var/log/nginx \
                            /etc/nginx/ssl \
                            /var/run \
    && chmod -R 755 /var/cache/nginx \
                    /var/log/nginx \
    && chmod 700 /etc/nginx/ssl

# Copy optimized configuration files
COPY nginx.conf /etc/nginx/nginx.conf
COPY conf.d/ /etc/nginx/conf.d/
COPY ssl/ /etc/nginx/ssl/

# Set proper permissions for configuration files
RUN chown -R nginx:nginx /etc/nginx && \
    find /etc/nginx -type f -exec chmod 644 {} \; && \
    find /etc/nginx -type d -exec chmod 755 {} \;

# Create health check script
RUN echo '#!/bin/sh' > /usr/local/bin/healthcheck.sh && \
    echo 'curl -f -H "Host: health.local" http://localhost:8080/nginx-health || exit 1' >> /usr/local/bin/healthcheck.sh && \
    chmod +x /usr/local/bin/healthcheck.sh

# Remove shell access for security  
RUN sed -i 's|nginx:x:101:101:nginx:/var/cache/nginx:/bin/sh|nginx:x:101:101:nginx:/var/cache/nginx:/sbin/nologin|' /etc/passwd

# Create custom error pages
RUN mkdir -p /usr/share/nginx/html/errors
COPY error-pages/ /usr/share/nginx/html/errors/
RUN chown -R nginx:nginx /usr/share/nginx/html/errors

# Switch to nginx user
USER nginx

# Test nginx configuration
RUN nginx -t

# Expose ports
EXPOSE 80 443 8080

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Set up signal handling
STOPSIGNAL SIGQUIT

# Start nginx with proper signal handling
ENTRYPOINT ["/usr/bin/dumb-init", "--"]
CMD ["nginx", "-g", "daemon off;"]